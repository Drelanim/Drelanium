Steps for grid setup can be found here:
https://github.com/SeleniumHQ/selenium/wiki/Grid2

a) Download the grid standalone jar file, place it in a folder on the C drive that you designate (e.g. c:\SeleniumGrid) to be the grid excutables folder, this should be the same location for hub and nodes alike. Download the browser driver files and place them in the grid folder too.


b) Start the hub from command line from the Grid directory (assuming JRE , Java Runtime Env istalled, i.e. enabling the 'java' command)

C:\SeleniumGrid>java -jar selenium-server-standalone-3.141.59.jar -role hub
14:53:43.611 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358
14:53:43.692 INFO [GridLauncherV3.lambda$buildLaunchers$5] - Launching Selenium Grid hub on port 4444
2018-11-30 14:53:44.122:INFO::main: Logging initialized @833ms to org.seleniumhq.jetty9.util.log.StdErrLog
14:53:44.337 INFO [Hub.start] - Selenium Grid hub is up and running
14:53:44.338 INFO [Hub.start] - Nodes should register to http://10.0.8.176:4444/grid/register/
14:53:44.339 INFO [Hub.start] - Clients should connect to http://10.0.8.176:4444/wd/hub

leave the commandline up, it runs the hub....

c) Get a new command line in the Grid directory, and start up the node. Pass the browser driver files in the command. In this case Firefox, IE and Chrome.

C:\SeleniumGrid>java -jar -Dwebdriver.gecko.driver=geckodriver.exe -Dwebdriver.ie.driver=IEDriverServer.exe -Dwebdriver.chrome.driver=chromedriver.exe selenium-server-standalone-3.141.59.jar -role node -hub http://localhost:4444/grid/register
07:34:54.862 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358
07:34:54.969 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 23023
2018-12-01 07:34:55.119:INFO::main: Logging initialized @575ms to org.seleniumhq.jetty9.util.log.StdErrLog
07:34:55.350 INFO [WebDriverServlet.<init>] - Initialising WebDriverServlet
07:34:55.432 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 23023
07:34:55.433 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub
07:34:55.476 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms.
07:34:55.791 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://localhost:4444/grid/register
07:34:55.843 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use

d) Look at the hub Web console http://localhost:4444/grid/console
it will show the default max browser instances per browser type that the hub can handle.


IMPORTANT NOTE
--------------

When you need to test all types of browsers, not just  Chrome,IE and Firefox that the default node capabilities have,
you cannot just put in an extra -Dwebdriver.browserX.driver=browserXdriver.exe switch in the node startup script, it will not work.

Instead you have to create a specific node with a different port and specify not just the driver switch but browser name and other parameters.

Like this:
C:\SeleniumGrid>java -Dwebdriver.edge.driver=MicrosoftWebDriver.exe -jar selenium-server-standalone-3.141.59.jar -port 5556 -role node -hub http://localhost:4444/grid/register -browser "browserName=MicrosoftEdge, platform=WINDOWS, maxInstances=3"
07:55:34.284 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358
07:55:34.366 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5556
2018-12-01 07:55:34.532:INFO::main: Logging initialized @587ms to org.seleniumhq.jetty9.util.log.StdErrLog
07:55:34.778 INFO [WebDriverServlet.<init>] - Initialising WebDriverServlet
07:55:34.859 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5556
07:55:34.860 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub
07:55:34.900 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms.
07:55:35.111 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://localhost:4444/grid/register
07:55:35.140 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use


*** So the recommended approach is to have a separate node for each browser type and browser version, referencing the driver for the particular version ***


Bat file to start up local hub and nodes
-----------------------------------------
start cmd /k  "java -jar selenium-server-standalone-3.141.59.jar -role hub"
start cmd /k  "java -jar -Dwebdriver.gecko.driver=FireFoxV63.0.3/geckodriver.exe -Dwebdriver.ie.driver=IE11.0.95/IEDriverServer.exe -Dwebdriver.chrome.driver=Chrome70.0.3538/chromedriver.exe selenium-server-standalone-3.141.59.jar -port 5555 -role node -hub http://localhost:4444/grid/register"
start cmd /k "java -Dwebdriver.edge.driver=Edge14.14393/MicrosoftWebDriver.exe -jar selenium-server-standalone-3.141.59.jar -port 5556 -role node -hub http://localhost:4444/grid/register -browser "browserName=MicrosoftEdge, platform=WINDOWS, maxInstances=3""

Bat file using json based node configuration
--------------------------------------------
start cmd /k  "java -jar selenium-server-standalone-3.141.59.jar -role hub -hubConfig hub.json"
start cmd /k  "java -jar -Dwebdriver.gecko.driver=FireFoxV63.0.3/geckodriver.exe selenium-server-standalone-3.141.59.jar -role node -nodeConfig node1.json"
start cmd /k "java -Dwebdriver.edge.driver=Edge14.14393/MicrosoftWebDriver.exe -jar selenium-server-standalone-3.141.59.jar -role node -nodeConfig node2.json"
start cmd /k "java -Dwebdriver.gecko.driver=FireFoxV63.0.3/geckodriver.exe -jar selenium-server-standalone-3.141.59.jar -role node -nodeConfig node3.json"
start cmd /k "java -Dwebdriver.ie.driver=IE11.0.95/IEDriverServer.exe -jar selenium-server-standalone-3.141.59.jar -role node -nodeConfig node4.json"





