// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PlanetWinE2ETests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Login")]
    public partial class LoginFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Login.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Login", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("login to PlanetWin365")]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Italiano", null)]
        [NUnit.Framework.TestCaseAttribute("FIREFOX", "English", null)]
        [NUnit.Framework.TestCaseAttribute("EDGE", "Deutsch", null)]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Français", null)]
        [NUnit.Framework.TestCaseAttribute("FIREFOX", "Argentina", null)]
        [NUnit.Framework.TestCaseAttribute("EDGE", "Balkans", null)]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Български", null)]
        [NUnit.Framework.TestCaseAttribute("FIREFOX", "Polski", null)]
        [NUnit.Framework.TestCaseAttribute("EDGE", "Română", null)]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Shqip", null)]
        [NUnit.Framework.TestCaseAttribute("FIREFOX", "Österreich", null)]
        [NUnit.Framework.TestCaseAttribute("EDGE", "Chinese", null)]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Turkish", null)]
        public virtual void LoginToPlanetWin365(string browser, string language, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("login to PlanetWin365", null, exampleTags);
#line 3
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
 testRunner.Given(string.Format("Browser type is {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password",
                        "language"});
            table1.AddRow(new string[] {
                        "EPAM_QA_BUD_22",
                        "Arpito",
                        string.Format("{0}", language)});
#line 5
 testRunner.When("login to PlanetWin with following data", ((string)(null)), table1, "When ");
#line 8
 testRunner.Then("verify logged in condition", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("login to PlanetWin365 with bad credentials")]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Italiano", "Username o Password errati", null)]
        [NUnit.Framework.TestCaseAttribute("FIREFOX", "English", "Incorrect Username and Password", null)]
        [NUnit.Framework.TestCaseAttribute("EDGE", "Deutsch", "Benutzername oder Passwort falsch", null)]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Français", "Nom usager ou Mot de passe erronés", null)]
        [NUnit.Framework.TestCaseAttribute("FIREFOX", "Argentina", "Nombre de usuario y/o contraseña inválidos", null)]
        [NUnit.Framework.TestCaseAttribute("EDGE", "Balkans", "Korisničko ime i lozinka nisu tačni", null)]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Български", "Грешно потребителско име и пар", null)]
        [NUnit.Framework.TestCaseAttribute("FIREFOX", "Polski", "Bledna nazwa uzytkownika lub haslo", null)]
        [NUnit.Framework.TestCaseAttribute("EDGE", "Română", "Username sau Password greşite", null)]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Shqip", "username ose password jane gabim", null)]
        [NUnit.Framework.TestCaseAttribute("FIREFOX", "Österreich", "no error text available yet", null)]
        [NUnit.Framework.TestCaseAttribute("EDGE", "Chinese", "用户名和密码错误", null)]
        [NUnit.Framework.TestCaseAttribute("CHROME", "Turkish", "no error text availabl", null)]
        public virtual void LoginToPlanetWin365WithBadCredentials(string browser, string language, string errorMsg, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("login to PlanetWin365 with bad credentials", null, exampleTags);
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.Given(string.Format("Browser type is {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "username",
                        "password",
                        "language"});
            table2.AddRow(new string[] {
                        "EPAMtestuser",
                        "badpassword",
                        string.Format("{0}", language)});
#line 28
 testRunner.When("login to PlanetWin with following data", ((string)(null)), table2, "When ");
#line 31
 testRunner.Then(string.Format("verify access denied popup presented within 15 seconds with alert text {0}", errorMsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
