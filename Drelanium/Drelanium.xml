<?xml version="1.0"?>

<doc>
  <assembly>
    <name>Drelanium</name>
  </assembly>
  <members>
    <member name="T:Drelanium.DisposeDriverServices">
      <summary>
        Methods to dispose stuck WebDriver processes
      </summary>
    </member>
    <member name="F:Drelanium.DisposeDriverServices._processesToCheck">
      <summary>
        List of WebDriver process names
      </summary>
    </member>
    <member name="M:Drelanium.DisposeDriverServices.EndAllWebDriverProcess(System.TimeSpan,Serilog.Core.Logger)">
      <summary>
        Ends all WebDriver processes, that has been stuck longer, than the given timespan.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="processLifeSpan">The lifespan of the webdriver processes, that should be killed.</param>
    </member>
    <member name="T:Drelanium.ByExtensionMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.By" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.ByExtensionMethods.ByType(OpenQA.Selenium.By)">
      <summary>
        The By method that was used to create the By object.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
    </member>
    <member name="M:Drelanium.ByExtensionMethods.ByValue(OpenQA.Selenium.By)">
      <summary>
        The string value that was used to create the By object.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
    </member>
    <member name="T:Drelanium.IActionExtensionMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Interactions.IAction" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.IActionExtensionMethods.Perform(OpenQA.Selenium.Interactions.IAction,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.Interactions.IAction.Perform" />
        <para>Logs the event.</para>
      </summary>
      <param name="action"></param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during the method exeuction.
      </param>
    </member>
    <member
      name="M:Drelanium.IActionExtensionMethods.Perform``1(OpenQA.Selenium.Interactions.IAction,OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{OpenQA.Selenium.IWebDriver,``0},Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.Interactions.IAction.Perform" />
        <para>After perform, the browser waits until the given condition is met.</para>
        <para>Logs the event optionally.</para>
      </summary>
      <param name="action">The <see cref="T:OpenQA.Selenium.Interactions.IAction" /> chain, that should be performed on the browser.</param>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="T:Drelanium.IOptionsExtensionMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IOptions" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.IOptionsExtensionMethods.Cookies(OpenQA.Selenium.IOptions,OpenQA.Selenium.IWebDriver)">
      <summary>
        <see cref="T:Drelanium.CookieJar" />
      </summary>
      <param name="options">The <see cref="T:OpenQA.Selenium.IOptions" /> instance, that  allows the user to set options on the browser.</param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IOptionsExtensionMethods.Logs(OpenQA.Selenium.IOptions)">
      <summary>
        <see cref="T:Drelanium.LogsManager" />
      </summary>
      <param name="options">The <see cref="T:OpenQA.Selenium.IOptions" /> instance, that  allows the user to set options on the browser.</param>
    </member>
    <member
      name="M:Drelanium.IOptionsExtensionMethods.MouseMoveFollower(OpenQA.Selenium.IOptions,OpenQA.Selenium.IWebDriver)">
      <summary>
        <see cref="T:Drelanium.MouseMoveFollower" />
      </summary>
      <param name="options">The <see cref="T:OpenQA.Selenium.IOptions" /> instance, that  allows the user to set options on the browser.</param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IOptionsExtensionMethods.Timeouts(OpenQA.Selenium.IOptions,OpenQA.Selenium.IWebDriver)">
      <summary>
        <see cref="T:Drelanium.Timeouts" />
      </summary>
      <param name="options">The <see cref="T:OpenQA.Selenium.IOptions" /> instance, that  allows the user to set options on the browser.</param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IOptionsExtensionMethods.Window(OpenQA.Selenium.IOptions,OpenQA.Selenium.IWebDriver)">
      <summary>
        <see cref="T:Drelanium.Window" />
      </summary>
      <param name="options">The <see cref="T:OpenQA.Selenium.IOptions" /> instance, that  allows the user to set options on the browser.</param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="T:Drelanium.FindClickableElementMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ISearchContext" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.FindClickableElementMethods.FindClickableElement(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.Double,System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock,Serilog.Core.Logger)">
      <summary>
        Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method, then waits until the element becomes Clickable.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during the method exeuction.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.FindDisplayedElementMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ISearchContext" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.FindDisplayedElementMethods.FindDisplayedElement(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.Double,System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock,Serilog.Core.Logger)">
      <summary>
        Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method, then waits until the element becomes Displayed.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the given condition.</param>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.FindElementMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ISearchContext" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.FindElementMethods.FindElement(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
        <para>Logs the event.</para>
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
    </member>
    <member
      name="M:Drelanium.FindElementMethods.FindElement``1(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.Double,System.Func{OpenQA.Selenium.IWebElement,``0},System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock,Serilog.Core.Logger)">
      <summary>
        Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method, then waits until the element meets the given
        condition.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.FindElementMethods.FindElement(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.Double,System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock,Serilog.Core.Logger)">
      <summary>
        Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method, within the given timeout.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the given condition.</param>
      <param>
        <name>clock</name>
      </param>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.FindElementsMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ISearchContext" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.FindElementsMethods.FindElements(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElements(OpenQA.Selenium.By)" />
        <para>Logs the event.</para>
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during the method exeuction.
      </param>
    </member>
    <member name="T:Drelanium.FindEnabledElementMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ISearchContext" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.FindEnabledElementMethods.FindEnabledElement(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.Double,System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock,Serilog.Core.Logger)">
      <summary>
        Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method, then waits until the element becomes Enabled.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during the method exeuction.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.FindSelectedElementMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ISearchContext" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.FindSelectedElementMethods.FindSelectedElement(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.Double,System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock,Serilog.Core.Logger)">
      <summary>
        Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method, then waits until the element becomes Selected.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during the method exeuction.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.HasElementMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ISearchContext" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.HasElementMethods.HasElement(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Checks if the element can or cannot be found within the SearchContext.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
    </member>
    <member name="T:Drelanium.ISearchContextExtensionMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ISearchContext" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.ISearchContextExtensionMethods.GetDriver(OpenQA.Selenium.ISearchContext)">
      <summary>
        Gets the <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member
      name="M:Drelanium.ISearchContextExtensionMethods.Wait(OpenQA.Selenium.ISearchContext,System.Double,System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock)">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" />
      </summary>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="T:Drelanium.ITargetLocatorExtensionMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.ITargetLocator" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.ITargetLocatorExtensionMethods.Alert(OpenQA.Selenium.ITargetLocator,OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.Alert" />
      </summary>
      <param name="targetLocator">   ...Description to be added...</param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="T:Drelanium.CloseWindowMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebDriver" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.CloseWindowMethods.CloseFirstWindow(OpenQA.Selenium.IWebDriver,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.CloseWindowMethods.CloseLastWindow(OpenQA.Selenium.IWebDriver,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member
      name="M:Drelanium.CloseWindowMethods.CloseWindow(OpenQA.Selenium.IWebDriver,System.Int32,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="indexOfWindow">Index of the window that should be closed.</param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="T:Drelanium.CreateActions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebDriver" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.CreateActions.Actions(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.CreateActions.KeyDownAndUp(OpenQA.Selenium.IWebDriver,System.String,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="theKey">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.CreateActions.SendKeys(OpenQA.Selenium.IWebDriver,System.String,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="textToSend">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="T:Drelanium.EventListenerMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebDriver" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.AddEventListener(OpenQA.Selenium.IWebDriver,System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.AddEventListener(OpenQA.Selenium.IWebDriver,Drelanium.EventType,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.AddEventListenerToElement(OpenQA.Selenium.IWebDriver,System.String,System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="elementName">The variable name for the element that can be used in the window global object.</param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.AddEventListenerToElement(OpenQA.Selenium.IWebDriver,System.String,Drelanium.EventType,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="elementName">The variable name for the element that can be used in the window global object.</param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.AddEventListenerToElement(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.IWebElement,System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.AddEventListenerToElement(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.IWebElement,Drelanium.EventType,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.RemoveEventListener(OpenQA.Selenium.IWebDriver,System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.RemoveEventListener(OpenQA.Selenium.IWebDriver,Drelanium.EventType,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.RemoveEventListenerToElement(OpenQA.Selenium.IWebDriver,System.String,System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="elementName">The variable name for the element that can be used in the window global object.</param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.RemoveEventListenerToElement(OpenQA.Selenium.IWebDriver,System.String,Drelanium.EventType,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="elementName">The variable name for the element that can be used in the window global object.</param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.RemoveEventListenerToElement(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.IWebElement,System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.EventListenerMethods.RemoveEventListenerToElement(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.IWebElement,Drelanium.EventType,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="eventType">The type of the event.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="functionName">The variable name for the function that can be used in the window global object.</param>
    </member>
    <member name="T:Drelanium.HttpWebRequestMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebDriver" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.HttpWebRequestMethods.HttpWebRequest(OpenQA.Selenium.IWebDriver,System.Uri,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="url">The URL to load.</param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.HttpWebRequestMethods.HttpWebRequest(OpenQA.Selenium.IWebDriver,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="T:Drelanium.HttpWebResponseMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebDriver" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.HttpWebResponseMethods.HttpWebResponse(OpenQA.Selenium.IWebDriver,System.Uri,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="T:System.Net.HttpWebResponse" />
        <para>Logs the event optionally.</para>
      </summary>
      <param name="url">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.HttpWebResponseMethods.HttpWebResponse(OpenQA.Selenium.IWebDriver,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="T:System.Net.HttpWebResponse" />
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="T:Drelanium.IWebDriverAppendMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebDriver" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.IWebDriverAppendMethods.AppendElementToParent(OpenQA.Selenium.IWebDriver,System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="parentElementName">The variable name for the parent element that can be used in the window global object.</param>
      <param name="childElementName">The variable name for the child element that can be used in the window global object.</param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member
      name="M:Drelanium.IWebDriverAppendMethods.AppendElementToParent(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="parentElement">The parent element.</param>
      <param name="childElementName">The variable name for the child element that can be used in the window global object.</param>
    </member>
    <member
      name="M:Drelanium.IWebDriverAppendMethods.AppendElementToParent(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="parentElement">The parent element.</param>
      <param name="childElement">The child element.</param>
    </member>
    <member name="T:Drelanium.IWebDriverExtensionMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebDriver" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Body(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Capabilities(OpenQA.Selenium.IWebDriver)">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.ICapabilities" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member
      name="M:Drelanium.IWebDriverExtensionMethods.Click(OpenQA.Selenium.IWebDriver,System.Int32,System.Int32,Serilog.Core.Logger)">
      <summary>
        Moves the cursor to a given x-y point and performs a click.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="y">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="x">...Description to be added...</param>
    </member>
    <member
      name="M:Drelanium.IWebDriverExtensionMethods.Click(OpenQA.Selenium.IWebDriver,System.Drawing.Point,Serilog.Core.Logger)">
      <summary>
        Moves the cursor to a given point and performs a click.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="point">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Create(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Document(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.JQuery(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Mouse(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Navigation(OpenQA.Selenium.IWebDriver)">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.INavigation" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Options(OpenQA.Selenium.IWebDriver)">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.IOptions" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Quit(OpenQA.Selenium.IWebDriver,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IWebDriver.Quit" /> Logs the action.
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Scroll(OpenQA.Selenium.IWebDriver)">
      <summary>
        Methods to perform scroll in the browser.
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Switch(OpenQA.Selenium.IWebDriver)">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.ITargetLocator" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="M:Drelanium.IWebDriverExtensionMethods.Url(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="T:Drelanium.ActionMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.ActionMethods.Actions(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.ActionMethods.DragAndDropToOffset(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="offsetX">...Description to be added...</param>
      <param name="offsetY">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ActionMethods.KeyDownAndUp(OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="theKey">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ActionMethods.MoveMouseOver(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.ActionMethods.MoveMouseOverAndClick(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.ActionMethods.RelativeClick(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="offsetX">...Description to be added...</param>
      <param name="offsetY">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ActionMethods.RelativeRightClick(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="offsetX">...Description to be added...</param>
      <param name="offsetY">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ActionMethods.RightClick(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="T:Drelanium.ClickMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.ClickMethods.Click(OpenQA.Selenium.IWebElement,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IWebElement.Click" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.ClickMethods.Click(OpenQA.Selenium.IWebElement,System.Double,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IWebElement.Click" />
        <para>Method is repeated until the element is successfully clicked.</para>
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
    </member>
    <member
      name="M:Drelanium.ClickMethods.Click``1(OpenQA.Selenium.IWebElement,System.Double,System.Func{OpenQA.Selenium.IWebDriver,``0},System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock,Serilog.Core.Logger)">
      <summary>
        Clicks this <see cref="T:OpenQA.Selenium.IWebElement" />, then waits until the given condition.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
    </member>
    <member name="T:Drelanium.ExecuteScriptMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.ExecuteScriptMethods.ExecuteJavaScript(OpenQA.Selenium.IWebElement,System.String,System.Object[])">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="script">...Description to be added...</param>
      <param name="args">...Description to be added...</param>
    </member>
    <member
      name="M:Drelanium.ExecuteScriptMethods.ExecuteJavaScript``1(OpenQA.Selenium.IWebElement,System.String,System.Object[])">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="script">...Description to be added...</param>
      <param name="args">...Description to be added...</param>
    </member>
    <member name="T:Drelanium.IWebElementAppendMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.IWebElementAppendMethods.AppendChild(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="parentElement">The parent element.</param>
      <param name="childElement">The child element.</param>
    </member>
    <member
      name="M:Drelanium.IWebElementAppendMethods.AppendTo(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="parentElement">The parent element.</param>
      <param name="childElement">The child element.</param>
    </member>
    <member name="T:Drelanium.IWebElementExtensionMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.Attributes(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.Blur(OpenQA.Selenium.IWebElement,Serilog.Core.Logger)">
      <summary>
        Loose focus from the element. The body element will get the focus.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member
      name="M:Drelanium.IWebElementExtensionMethods.DispatchEvent(OpenQA.Selenium.IWebElement,System.String,Serilog.Core.Logger)">
      <summary>
        Dispatches a HTMLEvent from the global window object on an element.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="element">The event will be dispatched on this element.</param>
      <param name="eventName">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.Focus(OpenQA.Selenium.IWebElement,Serilog.Core.Logger)">
      <summary>
        Put focus on the element.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.GetWebElementID(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.JSClick(OpenQA.Selenium.IWebElement,Serilog.Core.Logger)">
      <summary>
        Performs a JavaScript click() on the element.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.Location(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.Properties(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.Select(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.IWebElementExtensionMethods.Style(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="T:Drelanium.RemoveMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.RemoveMethods.Remove(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="T:Drelanium.SendKeysMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.SendKeysMethods.DeleteFromEndOfTextbox(OpenQA.Selenium.IWebElement,System.Int32)">
      <summary>
        To be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="numberOfCharactersToBeDeleted">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.SendKeysMethods.SendEnterKey(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.SendKeysMethods.SendKeys(OpenQA.Selenium.IWebElement,System.String,System.Boolean)">
      <summary>
        To be added..
        .
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="text">...Description to be added...</param>
      <param name="clearFirst">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.SendKeysMethods.SendTabKey(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.SendKeysMethods.TypeToTextbox(OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="content">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.SendKeysMethods.TypeToTextboxThenEnter(OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        To be added..
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="content">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.SendKeysMethods.TypeToTextboxThenTab(OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        To be added..
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="content">...Description to be added...</param>
    </member>
    <member name="T:Drelanium.SubmitMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.SubmitMethods.Submit(OpenQA.Selenium.IWebElement,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IWebElement.Submit" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="M:Drelanium.SubmitMethods.Submit(OpenQA.Selenium.IWebElement,System.Double,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IWebElement.Submit" />
        <para>Method is repeated until the element is successfully submitted to the web server.</para>
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
    </member>
    <member
      name="M:Drelanium.SubmitMethods.Submit``1(OpenQA.Selenium.IWebElement,System.Double,System.Func{OpenQA.Selenium.IWebDriver,``0},System.String,System.Type[],System.Double,OpenQA.Selenium.Support.UI.IClock,Serilog.Core.Logger)">
      <summary>
        Submits this <see cref="T:OpenQA.Selenium.IWebElement" />, then waits until the given condition.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="timeoutMessage">The message that appears on timeout.</param>
      <param name="ignoredExceptionTypes">The Exception types, that are suppressed until until waiting.</param>
      <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock" /> interface used to determine when time has passed.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="sleepIntervalInSeconds">
        A <see cref="T:System.TimeSpan" /> value indicating how often to check for the condition to
        be true.
      </param>
      <param name="timeoutInSeconds"></param>
    </member>
    <member name="T:Drelanium.ViewMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.ViewMethods.ScrollIntoView(OpenQA.Selenium.IWebElement,System.String,System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="behavior">...Description to be added...</param>
      <param name="block">...Description to be added...</param>
      <param name="inline">...Description to be added...</param>
    </member>
    <member name="T:Drelanium.WrappedDriver">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.IWebElement" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.WrappedDriver.Driver(OpenQA.Selenium.IWebElement)">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.Remote.RemoteWebElement.WrappedDriver" />
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="T:Drelanium.UriHttpWebRequestMethods">
      <summary>
        Extension methods for <see cref="T:System.Uri" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.UriHttpWebRequestMethods.HttpWebRequest(System.Uri,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="url">     ...Description to be added... </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="T:Drelanium.UriHttpWebResponseMethods">
      <summary>
        Extension methods for <see cref="T:System.Uri" /> types.
      </summary>
    </member>
    <member name="M:Drelanium.UriHttpWebResponseMethods.HttpWebResponse(System.Uri,System.Boolean,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="suppressExceptions">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="url">...Description to be added...</param>
    </member>
    <member name="T:Drelanium.UntilDocumentMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilDocumentMethods.UntilDocumentReadyState(OpenQA.Selenium.Support.UI.WebDriverWait,Drelanium.DocumentReadyState)">
      <summary>
        Waits, until the Document.readyState is equals with the expected value.
      </summary>
      <param name="expectedDocumentReadyState">The Document.readyState property describes the loading state of the document.</param>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementAttributeConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementAttributeConditions.UntilElementAttribute``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement,System.String,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementAttributeConditions.UntilElementAttribute``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement,Drelanium.ElementAttributeName,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementAttributeConditions.UntilElementAttribute``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.String,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementAttributeConditions.UntilElementAttribute``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By,System.String,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementAttributeConditions.UntilElementAttribute``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,Drelanium.ElementAttributeName,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementAttributeConditions.UntilElementAttribute``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By,Drelanium.ElementAttributeName,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementClickableConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementClickableConditions.UntilElementIsClickable(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Clickable(Displayed and Enabled).
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementClickableConditions.UntilElementIsClickable(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Clickable(Displayed and Enabled).
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementClickableConditions.UntilElementIsClickable(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Clickable(Displayed and Enabled).
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementClickableConditions.UntilElementIsNotClickable(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Clickable(Displayed and Enabled).
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element"></param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementClickableConditions.UntilElementIsNotClickable(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Clickable(Displayed and Enabled).
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementClickableConditions.UntilElementIsNotClickable(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Clickable(Displayed and Enabled).
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementConditions.UntilElement``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement,System.Func{OpenQA.Selenium.IWebElement,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementConditions.UntilElement``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.Func{OpenQA.Selenium.IWebElement,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementDisappearConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementDisappearConditions.UntilElementDisappeared(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should Disappear(not exists or not Displayed).
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementDisappearConditions.UntilElementDisappeared(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should Disappear(not exists or not Displayed).
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementDisplayedConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementDisplayedConditions.UntilElementIsDisplayed(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Displayed.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementDisplayedConditions.UntilElementIsDisplayed(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Displayed.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementDisplayedConditions.UntilElementIsDisplayed(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Displayed.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementDisplayedConditions.UntilElementIsNotDisplayed(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Displayed.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementDisplayedConditions.UntilElementIsNotDisplayed(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Displayed.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementDisplayedConditions.UntilElementIsNotDisplayed(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Displayed.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementEnabledConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementEnabledConditions.UntilElementIsEnabled(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Enabled.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementEnabledConditions.UntilElementIsEnabled(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Enabled.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementEnabledConditions.UntilElementIsEnabled(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Enabled.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementEnabledConditions.UntilElementIsNotEnabled(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Enabled.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementEnabledConditions.UntilElementIsNotEnabled(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Enabled.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementEnabledConditions.UntilElementIsNotEnabled(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Enabled.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementExistConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementExistConditions.UntilElementExists(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> exists.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementExistConditions.UntilElementExists(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> exists.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementExistConditions.UntilElementNotExists(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> not exists.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementExistConditions.UntilElementNotExists(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> not exists.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementPropertyConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementPropertyConditions.UntilElementProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement,System.String,System.Func{System.Object,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given property has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementPropertyConditions.UntilElementProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement,Drelanium.ElementPropertyName,System.Func{System.Object,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given property has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementPropertyConditions.UntilElementProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.String,System.Func{System.Object,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given property has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementPropertyConditions.UntilElementProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By,System.String,System.Func{System.Object,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given property has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementPropertyConditions.UntilElementProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,Drelanium.ElementPropertyName,System.Func{System.Object,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given property has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementPropertyConditions.UntilElementProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By,Drelanium.ElementPropertyName,System.Func{System.Object,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given property has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementSelectedConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementSelectedConditions.UntilElementIsNotSelected(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Selected.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementSelectedConditions.UntilElementIsNotSelected(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Selected.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementSelectedConditions.UntilElementIsNotSelected(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become not Selected.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementSelectedConditions.UntilElementIsSelected(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Selected.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementSelectedConditions.UntilElementIsSelected(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Selected.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementSelectedConditions.UntilElementIsSelected(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" /> has become Selected.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilElementStylePropertyConditions">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilElementStylePropertyConditions.UntilElementStyleProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement,System.String,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementStylePropertyConditions.UntilElementStyleProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement,Drelanium.ElementPropertyName,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementStylePropertyConditions.UntilElementStyleProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.String,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementStylePropertyConditions.UntilElementStyleProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By,System.String,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property has met the given condition.
        <para>
          Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.NoSuchElementException" />,
          <see cref="T:OpenQA.Selenium.StaleElementReferenceException" />
        </para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementStylePropertyConditions.UntilElementStyleProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,Drelanium.ElementPropertyName,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilElementStylePropertyConditions.UntilElementStyleProperty``1(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By,Drelanium.ElementPropertyName,System.Func{System.String,``0})">
      <summary>
        Waits, until the <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property has met the given condition.
        <para>Exceptions ignored until timeout: <see cref="T:OpenQA.Selenium.StaleElementReferenceException" /></para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="T:Drelanium.UntilPageMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilPageMethods.UntilPageHasLoaded(OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{System.Uri,System.Boolean})">
      <summary>
        Waits until the browser's loaded the page and the Url has met the given condition.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="urlCondition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilPageMethods.UntilPageHasLoadedWithoutCookies(OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{System.Uri,System.Boolean})">
      <summary>
        Waits until the browser's loaded the page without domain cookies and the Url has met the given condition.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="urlCondition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member name="T:Drelanium.UntilUrlMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.UntilUrlMethods.UntilUrl``1(OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{System.String,``0})">
      <summary>
        Waits, until the browser's loaded Url should meet the given condition.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilUrlMethods.UntilUrl``1(OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{System.Uri,``0})">
      <summary>
        Waits, until the browser's loaded Url should meet the given condition.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
    </member>
    <member name="M:Drelanium.UntilUrlMethods.UntilUrlContains(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
      <summary>
        Waits, until the browser's loaded Url should contain the given value.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="urlPart">The URL part the browser is currently displaying.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:System.ArgumentException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilUrlMethods.UntilUrlLeftPart``1(OpenQA.Selenium.Support.UI.WebDriverWait,System.UriPartial,System.Func{System.String,``0})">
      <summary>
        Waits, until the browser's loaded Url should not contain the given value.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="uriPartial">
        <inheritdoc cref="M:System.Uri.GetLeftPart(System.UriPartial)" />
      </param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
    </member>
    <member name="M:Drelanium.UntilUrlMethods.UntilUrlMatches(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
      <summary>
        Waits, until the browser's loaded Url should match the regular expression.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="regexPattern">The regular expression pattern.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:System.ArgumentException"></exception>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilUrlMethods.UntilUrlNotContains(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
      <summary>
        Waits, until the browser's loaded Url should not contain the given value.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="urlPart">The URL part the browser is currently displaying.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
    </member>
    <member
      name="M:Drelanium.UntilUrlMethods.UntilUrlNotMatches(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
      <summary>
        Waits, until the browser's loaded Url should not match the regular expression.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="regexPattern">The regular expression pattern.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
      <exception cref="T:System.ArgumentException"></exception>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"></exception>
    </member>
    <member name="M:Drelanium.UntilUrlMethods.UntilUrlNotToBe(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
      <summary>
        Waits, until the browser's loaded Url should not be the given value.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="url">The URL the browser is currently displaying.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
    </member>
    <member name="M:Drelanium.UntilUrlMethods.UntilUrlToBe(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
      <summary>
        Waits, until the browser's loaded Url should to be the given value.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="url">The URL the browser is currently displaying.</param>
      <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException"></exception>
    </member>
    <member name="T:Drelanium.WebDriverWaitPropertyMethods">
      <summary>
        Extension methods for <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> types.
      </summary>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitPropertyMethods.AddIgnoreExceptionTypes(OpenQA.Selenium.Support.UI.WebDriverWait,System.Type[])">
      <summary>
        Adding IgnoreExceptionTypes to the <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="exceptionTypes">
        Configures this instance to ignore specific types of exceptions while waiting for a condition.
        Any exceptions not whitelisted will be allowed to propagate, terminating the wait.
      </param>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitPropertyMethods.AddPollingInterval(OpenQA.Selenium.Support.UI.WebDriverWait,System.TimeSpan)">
      <summary>
        Adding AddPollingInterval to the <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="pollingInterval">How often the condition should be evaluated. The default timeout is 500 milliseconds.</param>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitPropertyMethods.AddTimeoutMessage(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
      <summary>
        Adding AddTimeoutMessage to the <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance.
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="message">The message to be displayed when time expires.</param>
    </member>
    <member name="T:Drelanium.Highlighter">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member
      name="M:Drelanium.Highlighter.ChangePositionForCircle(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param>...Description to be added...</param>
      <param name="circle">...Description to be added...</param>
      <param name="xPosCenter">...Description to be added...</param>
      <param name="yPosCenter">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.Highlighter.ChangePositionForCircle(OpenQA.Selenium.IWebElement,System.Drawing.Point)">
      <summary>
        ...Description to be added...
      </summary>
      <param>...Description to be added...</param>
      <param name="circle">...Description to be added...</param>
      <param name="centerPoint">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.Highlighter.ChangeTextForCircle(OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param>...Description to be added...</param>
      <param name="circle">...Description to be added...</param>
      <param name="text">...Description to be added...</param>
    </member>
    <member
      name="M:Drelanium.Highlighter.CreateCircle(OpenQA.Selenium.IWebDriver,System.String,System.String,System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="circleName">...Description to be added...</param>
      <param name="text">...Description to be added...</param>
      <param name="xPosCenter">...Description to be added...</param>
      <param name="yPosCenter">...Description to be added...</param>
    </member>
    <member
      name="M:Drelanium.Highlighter.CreateCircle(OpenQA.Selenium.IWebDriver,System.String,System.String,System.Drawing.Point)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
      <param name="circleName">...Description to be added...</param>
      <param name="text">...Description to be added...</param>
      <param name="centerPoint">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.Highlighter.RemoveCircle(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param>...Description to be added...</param>
      <param name="circle">...Description to be added...</param>
    </member>
    <member name="T:Drelanium.ColorName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ColorName.#ctor(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="name">...Description to be added...</param>
    </member>
    <member name="P:Drelanium.ColorName.Name">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.ElementAttributeName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ElementAttributeName.#ctor(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="attributeName">Name of the attribute of the element.</param>
    </member>
    <member name="P:Drelanium.ElementAttributeName.AttributeName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.ElementPropertyName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ElementPropertyName.#ctor(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="propertyName">...Description to be added...</param>
    </member>
    <member name="P:Drelanium.ElementPropertyName.PropertyName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.ElementStylePropertyName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ElementStylePropertyName.#ctor(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="propertyName">...Description to be added...</param>
    </member>
    <member name="P:Drelanium.ElementStylePropertyName.PropertyName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="F:Drelanium.EventType.dblclick">
      <summary>
      </summary>
    </member>
    <member name="F:Drelanium.EventType.mouseup">
      <summary>
      </summary>
    </member>
    <member name="T:Drelanium.ChromeConfiguration">
      <summary>
        Class to initialize and setup a <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.ChromeConfiguration.InitialOptions">
      <summary>
        The initial <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.ChromeConfiguration.Arguments">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.ChromeConfiguration.CapabilityUseAutomationExtension">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.ChromeConfiguration.ChromeDriverDirectory">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ChromeConfiguration.Bind(Microsoft.Extensions.Configuration.IConfigurationRoot)">
      <summary>
      </summary>
      <param name="configurationRoot">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.ChromeConfiguration.Bind(System.String)">
      <summary>
      </summary>
      <param name="jsonPath">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.ChromeConfiguration.BuildOptions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.BrowserType">
      <summary>
        The type of the selected browser to be automated.
      </summary>
    </member>
    <member name="F:Drelanium.BrowserType.EDGE">
      <summary>
      </summary>
    </member>
    <member name="T:Drelanium.ExecutionMode">
      <summary>
        Switch between local and remote execution.
      </summary>
    </member>
    <member name="T:Drelanium.DriverConfiguration">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.BrowserType">
      <summary>
        The type of the selected browser to be automated.
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.ExecutionMode">
      <summary>
        Switch between local and remote execution.
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.SeleniumGridHubUrl">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.ChromeConfiguration">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.EdgeConfiguration">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.FirefoxConfiguration">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.InternetExplorerConfiguration">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.SafariConfiguration">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.DriverConfiguration.OperaConfiguration">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.DriverConfiguration.Bind(Microsoft.Extensions.Configuration.IConfigurationRoot)">
      <summary>
      </summary>
      <param name="configurationRoot">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.DriverConfiguration.Bind(System.String)">
      <summary>
      </summary>
      <param name="jsonPath">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.DriverConfiguration.BuildDriverOptions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.DriverInitializer">
      <summary>
        Static class, that contains the StartWebDriver method.
      </summary>
    </member>
    <member
      name="M:Drelanium.DriverInitializer.StartWebDriver(Drelanium.ExecutionMode,Drelanium.BrowserType,OpenQA.Selenium.DriverOptions,System.String,System.Uri,Serilog.Core.Logger)">
      <summary>
        Method, that initializes an <see cref="T:OpenQA.Selenium.IWebDriver" /> type, depending on the given attributes.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="executionMode">Switch between local and remote execution.</param>
      <param name="browserType">  The type of the selected browser to be automated.</param>
      <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions" /> object containing the desired capabilities of the browser.</param>
      <param name="localDriverDirectory">The full path to the directory containing ***driver.exe.</param>
      <param name="seleniumGridHubUrl">
        URI containing the address of the WebDriver remote server (e.g.
        http://127.0.0.1:4444/wd/hub).
      </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="T:Drelanium.EdgeConfiguration">
      <summary>
        Class to initialize and setup a <see cref="T:OpenQA.Selenium.Edge.EdgeOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.EdgeConfiguration.InitialOptions">
      <summary>
        The initial <see cref="T:OpenQA.Selenium.Edge.EdgeOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.EdgeConfiguration.EdgeDriverDirectory">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.EdgeConfiguration.Bind(Microsoft.Extensions.Configuration.IConfigurationRoot)">
      <summary>
      </summary>
      <param name="configurationRoot">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.EdgeConfiguration.Bind(System.String)">
      <summary>
      </summary>
      <param name="jsonPath">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.EdgeConfiguration.BuildOptions">
      <summary>
      </summary>
      <returns>...Description to be added...</returns>
    </member>
    <member name="T:Drelanium.FirefoxConfiguration">
      <summary>
        Class to initialize and setup a <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.FirefoxConfiguration.InitialOptions">
      <summary>
        The initial <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.FirefoxConfiguration.Arguments">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.FirefoxConfiguration.FirefoxDriverDirectory">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.FirefoxConfiguration.Bind(Microsoft.Extensions.Configuration.IConfigurationRoot)">
      <summary>
      </summary>
      <param name="configurationRoot">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.FirefoxConfiguration.Bind(System.String)">
      <summary>
      </summary>
      <param name="jsonPath">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.FirefoxConfiguration.BuildOptions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.InternetExplorerConfiguration">
      <summary>
        Class to initialize and setup a <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.InternetExplorerConfiguration.InitialOptions">
      <summary>
        The initial <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.InternetExplorerConfiguration.InternetExplorerDriverDirectory">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member
      name="M:Drelanium.InternetExplorerConfiguration.Bind(Microsoft.Extensions.Configuration.IConfigurationRoot)">
      <summary>
      </summary>
      <param name="configurationRoot">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.InternetExplorerConfiguration.Bind(System.String)">
      <summary>
      </summary>
      <param name="jsonPath">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.InternetExplorerConfiguration.BuildOptions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.OperaConfiguration">
      <summary>
        Class to initialize and setup a <see cref="T:OpenQA.Selenium.Opera.OperaOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.OperaConfiguration.InitialOptions">
      <summary>
        The initial <see cref="T:OpenQA.Selenium.Opera.OperaOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.OperaConfiguration.Arguments">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.OperaConfiguration.OperaDriverDirectory">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.OperaConfiguration.Bind(Microsoft.Extensions.Configuration.IConfigurationRoot)">
      <summary>
      </summary>
      <param name="configurationRoot">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.OperaConfiguration.Bind(System.String)">
      <summary>
      </summary>
      <param name="jsonPath">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.OperaConfiguration.BuildOptions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.SafariConfiguration">
      <summary>
        Class to initialize and setup a <see cref="T:OpenQA.Selenium.Safari.SafariOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.SafariConfiguration.InitialOptions">
      <summary>
        The initial <see cref="T:OpenQA.Selenium.Safari.SafariOptions" /> object.
      </summary>
    </member>
    <member name="P:Drelanium.SafariConfiguration.SafariDriverDirectory">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.SafariConfiguration.Bind(Microsoft.Extensions.Configuration.IConfigurationRoot)">
      <summary>
      </summary>
      <param name="configurationRoot">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.SafariConfiguration.Bind(System.String)">
      <summary>
      </summary>
      <param name="jsonPath">...Description to be added...</param>
      <returns>...Description to be added...</returns>
    </member>
    <member name="M:Drelanium.SafariConfiguration.BuildOptions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.WebDriverWaitConditions">
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
      <summary>
        Collection of methods, that provides exit condition for the
        <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> type's Until(
        <see cref="T:System.Func`2" />) method.
      </summary>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.Cookies``1(System.Func{System.Collections.ObjectModel.ReadOnlyCollection{OpenQA.Selenium.Cookie},``0})">
      <summary>
        The browser's cookies meet the condition.
      </summary>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.DocumentReadyStateToBe(Drelanium.DocumentReadyState)">
      <summary>
        The Document.readyState property should be equal to the given value.
      </summary>
      <param name="documentReadyState">The Document.readyState property describes the loading state of the document.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementAttribute``1(OpenQA.Selenium.By,System.String,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementAttribute``1(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.String,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementAttribute``1(OpenQA.Selenium.IWebElement,System.String,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute should meet the given condition.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementAttribute``1(OpenQA.Selenium.IWebElement,Drelanium.ElementAttributeName,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute should meet the given condition.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementAttribute``1(OpenQA.Selenium.By,Drelanium.ElementAttributeName,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementAttribute``1(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,Drelanium.ElementAttributeName,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given attribute should meet the given condition.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="attributeName">The attribute's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeClickable(OpenQA.Selenium.IWebElement)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Clickable(Displayed and Enabled).
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeClickable(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Clickable(Displayed and Enabled).
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeClickable(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Clickable(Displayed and Enabled).
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotClickable(OpenQA.Selenium.IWebElement)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Clickable(not Displayed or not Enabled).
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotClickable(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Clickable(not Displayed or not Enabled).
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotClickable(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Clickable(not Displayed or not Enabled).
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.Element``1(OpenQA.Selenium.IWebElement,System.Func{OpenQA.Selenium.IWebElement,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should meet the given condition.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.Element``1(OpenQA.Selenium.By,System.Func{OpenQA.Selenium.IWebElement,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.Element``1(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.Func{OpenQA.Selenium.IWebElement,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToDisappear(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should Disappear(not exists or not Displayed).
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToDisappear(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should Disappear(not exists or not Displayed).
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeDisplayed(OpenQA.Selenium.IWebElement)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Displayed.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeDisplayed(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Displayed.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeDisplayed(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Displayed.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotDisplayed(OpenQA.Selenium.IWebElement)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Displayed.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotDisplayed(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Displayed.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotDisplayed(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Displayed.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeEnabled(OpenQA.Selenium.IWebElement)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Enabled.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeEnabled(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Enabled.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeEnabled(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Enabled.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotEnabled(OpenQA.Selenium.IWebElement)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Enabled.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotEnabled(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Enabled.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotEnabled(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Enabled.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToExist(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should exist.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToExist(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should exist.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToNotExist(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should not exist.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToNotExist(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should not exist.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementProperty``1(OpenQA.Selenium.IWebElement,System.String,System.Func{System.Object,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given property should meet the given condition.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementProperty``1(OpenQA.Selenium.By,System.String,System.Func{System.Object,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given property should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementProperty``1(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.String,System.Func{System.Object,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given property should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementProperty``1(OpenQA.Selenium.IWebElement,Drelanium.ElementPropertyName,System.Func{System.Object,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given property should meet the given condition.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementProperty``1(OpenQA.Selenium.By,Drelanium.ElementPropertyName,System.Func{System.Object,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given property should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementProperty``1(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,Drelanium.ElementPropertyName,System.Func{System.Object,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given property should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="propertyName">The property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotSelected(OpenQA.Selenium.IWebElement)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Selected.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotSelected(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Selected.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeNotSelected(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become not Selected.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeSelected(OpenQA.Selenium.IWebElement)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Selected.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeSelected(OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Selected.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementToBecomeSelected(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By)">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> should become Selected.
      </summary>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementStyleProperty``1(OpenQA.Selenium.IWebElement,System.String,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property should meet the given condition.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementStyleProperty``1(OpenQA.Selenium.By,System.String,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementStyleProperty``1(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,System.String,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementStyleProperty``1(OpenQA.Selenium.IWebElement,Drelanium.ElementStylePropertyName,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property should meet the given condition.
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementStyleProperty``1(OpenQA.Selenium.By,Drelanium.ElementStylePropertyName,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.ElementStyleProperty``1(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.By,Drelanium.ElementStylePropertyName,System.Func{System.String,``0})">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" />'s given style property should meet the given condition.
      </summary>
      <param name="locator">
        <inheritdoc cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)" />
      </param>
      <param name="stylePropertyName">The style property's name of the <see cref="T:OpenQA.Selenium.IWebElement" />.</param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="searchContext">The <see cref="T:OpenQA.Selenium.ISearchContext" /> within we search for the element.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
      <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.Title``1(System.Func{System.String,``0})">
      <summary>
        The browser's title should meet the condition.
      </summary>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.TitleMatches(System.String)">
      <summary>
        The browser's title should match the regular expression.
      </summary>
      <param name="regexPattern">The regular expression pattern.</param>
      <exception cref="T:System.ArgumentException"></exception>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.TitleNotMatches(System.String)">
      <summary>
        The browser's title should not match the regular expression.
      </summary>
      <param name="regexPattern">The regular expression pattern.</param>
      <exception cref="T:System.ArgumentException"></exception>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.TitleNotToBe(System.String)">
      <summary>
        The browser's title should be equal to the given value.
      </summary>
      <param name="title">The title of the current browser window.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.TitleNotToContain(System.String)">
      <summary>
        The browser's title should not contain the given value.
      </summary>
      <param name="titlePart">The title part of the current browser window.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ArgumentException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.TitleToBe(System.String)">
      <summary>
        The browser's title should be the given value.
      </summary>
      <param name="title">The title of the current browser window.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.TitleToContain(System.String)">
      <summary>
        The browser's title should contain the given value.
      </summary>
      <param name="titlePart">The title part of the current browser window.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ArgumentException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.PageHasLoaded(System.Func{System.Uri,System.Boolean})">
      <summary>
        The browser's loaded the page and the Url has met the given condition.
      </summary>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.PageHasLoaded(System.Func{System.String,System.Boolean})">
      <summary>
        The browser's loaded the page and the Url has met the given condition.
      </summary>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.PageHasLoadedWithoutDomainCookies(System.Func{System.Uri,System.Boolean})">
      <summary>
        The browser's loaded the page without cookies and the Url has met the given condition.
      </summary>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member
      name="M:Drelanium.WebDriverWaitConditions.PageHasLoadedWithoutDomainCookies(System.Func{System.String,System.Boolean})">
      <summary>
        The browser's loaded the page without cookies and the Url has met the given condition.
      </summary>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.Url``1(System.Func{System.String,``0})">
      <summary>
        The browser's loaded Url should meet the given condition.
      </summary>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.Url``1(System.Func{System.Uri,``0})">
      <summary>
        The browser's loaded Url should meet the given condition.
      </summary>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.UrlLeftPart``1(System.UriPartial,System.Func{System.String,``0})">
      <summary>
        The browser's loaded Url's given left part should meet the given condition.
      </summary>
      <param name="uriPartial">
        <inheritdoc cref="M:System.Uri.GetLeftPart(System.UriPartial)" />
      </param>
      <param name="condition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.InvalidOperationException"></exception>
      <exception cref="T:System.ArgumentException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.UrlMatches(System.String)">
      <summary>
        The browser's loaded Url should match the regular expression.
      </summary>
      <param name="regexPattern">The regular expression pattern.</param>
      <exception cref="T:System.ArgumentException"></exception>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.UrlNotMatches(System.String)">
      <summary>
        The browser's loaded Url should not match the regular expression.
      </summary>
      <param name="regexPattern">The regular expression pattern.</param>
      <exception cref="T:System.ArgumentException"></exception>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.UrlNotToBe(System.String)">
      <summary>
        The browser's loaded Url should not be the given value.
      </summary>
      <param name="url">The URL the browser is currently displaying.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.UrlNotToContain(System.String)">
      <summary>
        The browser's loaded Url should not contain the given value.
      </summary>
      <param name="urlPart">The URL part the browser is currently displaying.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ArgumentException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.UrlToBe(System.String)">
      <summary>
        The browser's loaded Url should be the given value.
      </summary>
      <param name="url">The URL the browser is currently displaying.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.WebDriverWaitConditions.UrlToContain(System.String)">
      <summary>
        The browser's loaded Url should contain the given value.
      </summary>
      <param name="urlPart">The URL part the browser is currently displaying.</param>
      <exception cref="T:System.ArgumentNullException"></exception>
      <exception cref="T:System.ArgumentException"></exception>
    </member>
    <member name="T:Drelanium.Alert">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.IAlert" />
      </summary>
    </member>
    <member name="M:Drelanium.Alert.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.Alert" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Alert.AlertImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IAlert" />
      </summary>
    </member>
    <member name="P:Drelanium.Alert.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.Alert.Dismiss">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IAlert.Dismiss" />
      </summary>
    </member>
    <member name="M:Drelanium.Alert.Accept">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IAlert.Accept" />
      </summary>
    </member>
    <member name="M:Drelanium.Alert.SendKeys(System.String)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IAlert.SendKeys(System.String)" />
      </summary>
    </member>
    <member name="M:Drelanium.Alert.SetAuthenticationCredentials(System.String,System.String)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IAlert.SetAuthenticationCredentials(System.String,System.String)" />
      </summary>
    </member>
    <member name="P:Drelanium.Alert.Text">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.IAlert.Text" />
      </summary>
    </member>
    <member name="T:Drelanium.Capabilities">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.ICapabilities" />
      </summary>
    </member>
    <member name="M:Drelanium.Capabilities.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.Capabilities" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Capabilities.CapabilitiesImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.ICapabilities" />
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.BrowserName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.Version">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.Platform">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.HandlesAlerts">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.CssSelectorsEnabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.JavascriptEnabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.DatabaseEnabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.LocationContextEnabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.ApplicationCacheEnabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.BrowserConnectionEnabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.WebStorageEnabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.AcceptSslCerts">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.Rotatable">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.NativeEvents">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.Proxy">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.UnexpectedAlertBehaviour">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.ElementScrollBehavior">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.WebdriverRemoteSessionid">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.WebdriverRemoteQuietExceptions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.Path">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.SeleniumProtocol">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.MaxInstances">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.Environment">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Capabilities.HasCapability(System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Capabilities.GetCapability(System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Capabilities.Item(System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Capabilities.ToString">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.CookieJar">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.ICookieJar" />
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.CookieJar" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.CookieJar.CookieJarImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.ICookieJar" />
      </summary>
    </member>
    <member name="P:Drelanium.CookieJar.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.AddCookie(OpenQA.Selenium.Cookie)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.AddCookie(OpenQA.Selenium.Cookie)" />
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.GetCookieNamed(System.String)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.GetCookieNamed(System.String)" />
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteCookie(OpenQA.Selenium.Cookie)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.DeleteCookie(OpenQA.Selenium.Cookie)" />
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteCookieNamed(System.String)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.DeleteCookieNamed(System.String)" />
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteAllCookies">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.DeleteAllCookies" />
      </summary>
    </member>
    <member name="P:Drelanium.CookieJar.AllCookies">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.ICookieJar.AllCookies" />
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.AddCookie(OpenQA.Selenium.Cookie,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.AddCookie(OpenQA.Selenium.Cookie)" />
        <para>Logs the event.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.CheckDomain(System.String,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteAllCookies(Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.DeleteAllCookies" />
        <para>Logs the event.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteAllCookies(System.String,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.DeleteAllCookies" />
        <para>Logs the event optionally.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteCookie(OpenQA.Selenium.Cookie,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.DeleteCookie(OpenQA.Selenium.Cookie)" />
        <para>Logs the event.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteCookie(System.String,OpenQA.Selenium.Cookie,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ICookieJar.DeleteCookie(OpenQA.Selenium.Cookie)" />
        <para>Logs the event optionally.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteCookieNamed(System.String,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:Drelanium.CookieJar.DeleteCookieNamed(System.String)" />
        <para>Logs the event.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DeleteCookieNamed(System.String,System.String,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.DomainCookies(System.String,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.GetCookieNamed(System.String,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:Drelanium.CookieJar.GetCookieNamed(System.String)" />
        <para>Logs the event.</para>
      </summary>
    </member>
    <member name="M:Drelanium.CookieJar.GetCookieNamed(System.String,System.String,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
    </member>
    <member name="T:Drelanium.Create">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Create.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Create.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.Create.CreateElement(System.String,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="tagType">The used html tag.</param>
      <param name="elementName">The variable name for the element that can be used in the window global object.</param>
    </member>
    <member name="M:Drelanium.Create.CreateElement(System.String,System.String,OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="parentElement">The parent element.</param>
      <param name="tagType">The used html tag.</param>
      <param name="elementName">The variable name for the element that can be used in the window global object.</param>
    </member>
    <member name="M:Drelanium.Create.CreateEvent(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
        Creates a HTMLEvent on the global window object.
      </summary>
      <param name="eventName">The name of the event.</param>
      <param name="eventType">The type of the event.</param>
      <param name="bubbles">The bubbles parameter of the event.</param>
      <param name="cancelable">The cancelable parameter of the event.</param>
    </member>
    <member name="M:Drelanium.Create.CreateEvent(System.String,Drelanium.EventType,System.Boolean,System.Boolean)">
      <summary>
        Creates a HTMLEvent on the global window object.
      </summary>
      <param name="eventName">The name of the event.</param>
      <param name="eventType">The type of the event.</param>
      <param name="bubbles">The bubbles parameter of the event.</param>
      <param name="cancelable">The cancelable parameter of the event.</param>
    </member>
    <member name="M:Drelanium.Create.CreateFunction(System.String,System.String,System.String)">
      <summary>
        Creates a new function and adds it to the window global object.
      </summary>
      <param name="functionName">The name that is used to save the function to the window.</param>
      <param name="functionArguments">The arguments of the function.</param>
      <param name="functionImplementation">The implementation of the function.</param>
    </member>
    <member name="T:Drelanium.DocumentReadyState">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="F:Drelanium.DocumentReadyState.loading">
      <summary>
      </summary>
    </member>
    <member name="T:Drelanium.Document">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Document.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Document.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="P:Drelanium.Document.ActiveElement">
      <summary>
        The <see cref="T:OpenQA.Selenium.IWebElement" /> that is currently focused.
      </summary>
    </member>
    <member name="P:Drelanium.Document.BaseURI">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Document.Body">
      <summary>
        The body <see cref="T:OpenQA.Selenium.IWebElement" /> of the html.
      </summary>
    </member>
    <member name="P:Drelanium.Document.DocumentElement">
      <summary>
        The document <see cref="T:OpenQA.Selenium.IWebElement" /> of the html.
      </summary>
    </member>
    <member name="P:Drelanium.Document.DocumentURI">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Document.Domain">
      <summary>
        The domain part of the current Url.
      </summary>
    </member>
    <member name="P:Drelanium.Document.Head">
      <summary>
        The head <see cref="T:OpenQA.Selenium.IWebElement" /> of the html.
      </summary>
    </member>
    <member name="P:Drelanium.Document.Links">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Document.ReadyState">
      <summary>
        ...Description to be added...
      </summary>
      <exception cref="T:OpenQA.Selenium.WebDriverException"></exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"></exception>
    </member>
    <member name="P:Drelanium.Document.Referrer">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Document.Title">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Document.URL">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.ExtendedActions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ExtendedActions.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.ExtendedActions.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="P:Drelanium.ExtendedActions.Actions">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.Interactions.Actions" />
      </summary>
    </member>
    <member name="P:Drelanium.ExtendedActions.ChainedActions">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ExtendedActions.BuildAndPerform(Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member
      name="M:Drelanium.ExtendedActions.BuildAndPerform``1(OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{OpenQA.Selenium.IWebDriver,``0},Serilog.Core.Logger)">
      <summary>
        Performs this action on the browser, and then waits until the condition is met.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.ExtendedActions.Click(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="onElement">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.Click(OpenQA.Selenium.IWebElement,Drelanium.ElementPoint)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="onElement">...Description to be added...</param>
      <param name="elementPoint">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.Click">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ExtendedActions.ClickAndHold(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="onElement">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.ClickAndHold">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ExtendedActions.ContextClick(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="onElement">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.ContextClick">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ExtendedActions.DoubleClick(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="onElement">
        ...Description to be added...
      </param>
    </member>
    <member name="M:Drelanium.ExtendedActions.DoubleClick">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ExtendedActions.DragAndDrop(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="source">...Description to be added...</param>
      <param name="target">...Description to be added...</param>
    </member>
    <member
      name="M:Drelanium.ExtendedActions.DragAndDropToOffset(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="source">...Description to be added...</param>
      <param name="offsetX">...Description to be added...</param>
      <param name="offsetY">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.KeyDown(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="theKey">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.KeyDown(OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">...Description to be added...</param>
      <param name="theKey">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.KeyUp(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="theKey">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.KeyUp(OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">...Description to be added...</param>
      <param name="theKey">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.MoveByOffset(System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="offsetX">...Description to be added...</param>
      <param name="offsetY">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.MoveTo(System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="x">...Description to be added...</param>
      <param name="y">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.MoveTo(System.Drawing.Point)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="point">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.MoveToElement(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="toElement">
        ...Description to be added...
      </param>
    </member>
    <member name="M:Drelanium.ExtendedActions.MoveToElement(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="toElement">...Description to be added...</param>
      <param name="offsetX">...Description to be added...</param>
      <param name="offsetY">...Description to be added...</param>
    </member>
    <member
      name="M:Drelanium.ExtendedActions.MoveToElement(OpenQA.Selenium.IWebElement,System.Int32,System.Int32,OpenQA.Selenium.Interactions.MoveToElementOffsetOrigin)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="toElement">...Description to be added...</param>
      <param name="offsetX">...Description to be added...</param>
      <param name="offsetY">...Description to be added...</param>
      <param name="offsetOrigin">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.MoveToElement(OpenQA.Selenium.IWebElement,Drelanium.ElementPoint)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="toElement">...Description to be added...</param>
      <param name="toElementPoint">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.Release(OpenQA.Selenium.IWebElement)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="onElement">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.Release">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.ExtendedActions.SendKeys(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="keysToSend">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.ExtendedActions.SendKeys(OpenQA.Selenium.IWebElement,System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="element">...Description to be added...</param>
      <param name="keysToSend">...Description to be added...</param>
    </member>
    <member name="T:Drelanium.JQuery">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.JQuery.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.JQuery.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="P:Drelanium.JQuery.Active">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.SeleniumLogType">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.LogsManager">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.ILogs" />
      </summary>
    </member>
    <member name="M:Drelanium.LogsManager.#ctor(OpenQA.Selenium.IOptions)">
      <summary>
        <inheritdoc cref="T:Drelanium.LogsManager" />
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.LogsImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.ILogs" />
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.BrowserLogs">
      <summary>
        <inheritdoc cref="F:OpenQA.Selenium.LogType.Browser" />
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.ClientLogs">
      <summary>
        <inheritdoc cref="F:OpenQA.Selenium.LogType.Client" />
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.DriverLogs">
      <summary>
        <inheritdoc cref="F:OpenQA.Selenium.LogType.Driver" />
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.ProfilerLogs">
      <summary>
        <inheritdoc cref="F:OpenQA.Selenium.LogType.Profiler" />
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.ServerLogs">
      <summary>
        <inheritdoc cref="F:OpenQA.Selenium.LogType.Server" />
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.HasBrowserLogs">
      <summary>
        Determines if there is any <see cref="F:OpenQA.Selenium.LogType.Browser" /> logs.
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.HasClientLogs">
      <summary>
        Determines if there is any <see cref="F:OpenQA.Selenium.LogType.Client" /> logs.
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.HasDriverLogs">
      <summary>
        Determines if there is any <see cref="F:OpenQA.Selenium.LogType.Driver" /> logs.
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.HasProfilerLogs">
      <summary>
        Determines if there is any <see cref="F:OpenQA.Selenium.LogType.Profiler" /> logs.
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.HasServerLogs">
      <summary>
        Determines if there is any <see cref="F:OpenQA.Selenium.LogType.Server" /> logs.
      </summary>
    </member>
    <member name="M:Drelanium.LogsManager.GetLog(System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.LogsManager.AvailableLogTypes">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.LogsManager.GetLog(Drelanium.SeleniumLogType)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="seleniumLogType">The log for which to retrieve the log entries.</param>
    </member>
    <member name="M:Drelanium.LogsManager.HasLog(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="logKind">
        The log for which to retrieve the log entries. Log types can be found in the
        <see cref="T:OpenQA.Selenium.LogType" /> class.
      </param>
    </member>
    <member name="M:Drelanium.LogsManager.HasLog(Drelanium.SeleniumLogType)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="seleniumLogType">The log for which to retrieve the log entries.</param>
    </member>
    <member name="M:Drelanium.LogsManager.LogKind(Drelanium.SeleniumLogType)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="seleniumLogType">The log for which to retrieve the log entries.</param>
    </member>
    <member name="T:Drelanium.Mouse">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Mouse.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Mouse.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.Mouse.MoveBy(System.Int32,System.Int32,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="y">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <param name="x">...Description to be added...</param>
    </member>
    <member
      name="M:Drelanium.Mouse.MoveByAndWaitUntilCondition``1(System.Int32,System.Int32,OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{OpenQA.Selenium.IWebDriver,``0},Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="y">...Description to be added...</param>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="x">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.Mouse.MoveTo(System.Int32,System.Int32,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="y">...Description to be added...</param>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
      <param name="x">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.Mouse.MoveTo(System.Drawing.Point,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="point">...Description to be added...</param>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
    </member>
    <member
      name="M:Drelanium.Mouse.MoveToAndWaitUntilCondition``1(System.Int32,System.Int32,OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{OpenQA.Selenium.IWebDriver,``0},Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="y">...Description to be added...</param>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
      <param name="x">...Description to be added...</param>
    </member>
    <member
      name="M:Drelanium.Mouse.MoveToAndWaitUntilCondition``1(System.Drawing.Point,OpenQA.Selenium.Support.UI.WebDriverWait,System.Func{OpenQA.Selenium.IWebDriver,``0},Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
      <param name="condition">
        The <see cref="T:System.Func`2" />, that defines the condition until the browser must
        wait.
      </param>
      <param name="point">...Description to be added...</param>
      <param name="wait">The <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait" /> instance, that is used to command the browser for wait.</param>
    </member>
    <member name="T:Drelanium.MouseMoveFollower">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="F:Drelanium.MouseMoveFollower.pictureInBase64">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="F:Drelanium.MouseMoveFollower.SeleniumMouseMoveFollowerID">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="F:Drelanium.MouseMoveFollower.MouseMoveFollowerFunctionName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.MouseMoveFollower.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.MouseMoveFollower.IsTurnedON">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.MouseMoveFollower.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.MouseMoveFollower.TurnOFF(Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.MouseMoveFollower.TurnON(Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.Navigation">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.INavigation" />
      </summary>
    </member>
    <member name="M:Drelanium.Navigation.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.Navigation" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Navigation.NavigationImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.INavigation" />
      </summary>
    </member>
    <member name="P:Drelanium.Navigation.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.Navigation.Back">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.Back" />
      </summary>
    </member>
    <member name="M:Drelanium.Navigation.Forward">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.Forward" />
      </summary>
    </member>
    <member name="M:Drelanium.Navigation.GoToUrl(System.String)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)" />
      </summary>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.Navigation.GoToUrl(System.Uri)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)" />
      </summary>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.Navigation.Refresh">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.Refresh" />
      </summary>
    </member>
    <member name="M:Drelanium.Navigation.Back(Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.Back" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.Navigation.Forward(Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.Forward" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.Navigation.GoToUrl(System.String,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)" />
        <para>Logs the event.</para>
      </summary>
      <param name="url">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.Navigation.GoToUrl(System.Uri,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)" />
        <para>Logs the event.</para>
      </summary>
      <param name="url">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.Navigation.GoToUrl(System.Uri,System.Boolean,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)" />
        <para>Logs the event optionally.</para>
      </summary>
      <param name="url">
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)" />
      </param>
      <param name="checkHttpResponse">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member
      name="M:Drelanium.Navigation.GoToUrl(System.Uri,System.Boolean,System.Boolean,System.Double,System.Func{System.Uri,System.Boolean},Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)" />
        <para>Logs the event optionally.</para>
      </summary>
      <param name="url">The URL to load.</param>
      <param name="loadWithoutCookies">To visit the url without cookies.</param>
      <param name="checkHttpResponse">To get a HTTPWebResponse before visit.</param>
      <param name="timeoutInSeconds">The timeout value indicating how long to wait for the condition.</param>
      <param name="urlCondition">The <see cref="T:System.Func`2" />, that defines the condition until the browser must wait.</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:Drelanium.Navigation.Refresh(Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.INavigation.Refresh" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="T:Drelanium.Options">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.IOptions" />
      </summary>
    </member>
    <member name="M:Drelanium.Options.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.Options" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Options.OptionsImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IOptions" />
      </summary>
    </member>
    <member name="P:Drelanium.Options.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.Options.Timeouts">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IOptions.Timeouts" />
      </summary>
    </member>
    <member name="P:Drelanium.Options.Cookies">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.IOptions.Cookies" />
      </summary>
    </member>
    <member name="P:Drelanium.Options.Window">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.IOptions.Window" />
      </summary>
    </member>
    <member name="P:Drelanium.Options.Logs">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.IOptions.Logs" />
      </summary>
    </member>
    <member name="M:Drelanium.Options.MouseMoveFollower">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.Scroll">
      <summary>
        Methods to perform scroll in the browser.
      </summary>
    </member>
    <member name="M:Drelanium.Scroll.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        Methods to perform scroll in the browser.
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Scroll.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.Scroll.By(System.Int32,System.Int32,System.String,Serilog.Core.Logger)">
      <summary>
        The method scrolls the document in the window by the given amount of pixels.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="x">The x coordinate in pixel along the horizontal axis of the document.</param>
      <param name="y">The y coordinate in pixel along the vertical axis of the document.</param>
      <param name="behaviour">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.Scroll.To(System.Int32,System.Int32,System.String,Serilog.Core.Logger)">
      <summary>
        The method scrolls to a particular set of pixel coordinates in the document.
        <para>Logs the event optionally.</para>
      </summary>
      <param name="x">The x coordinate in pixel along the horizontal axis of the document.</param>
      <param name="y">The y coordinate in pixel along the vertical axis of the document.</param>
      <param name="behaviour">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.Scroll.ToBodyBottom(System.String,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="behaviour">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.Scroll.ToBodyTop(System.String,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="behaviour">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="T:Drelanium.SeleniumLogs">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.SeleniumLogs.#ctor(Drelanium.LogsManager,System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.SeleniumLogs.LogKind">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.SeleniumLogs.Logs">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.SeleniumLogs.DefineLogEventLevel(OpenQA.Selenium.LogLevel)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member
      name="M:Drelanium.SeleniumLogs.Filter(System.Func{System.DateTime,System.Boolean},System.Func{OpenQA.Selenium.LogLevel,System.Boolean},System.Func{System.String,System.Boolean})">
      <summary>
        ...Description to be added...
      </summary>
      <param name="logTimeFilter">
        The <see cref="T:System.Func`2" />, that is applied to filter the LogEntries by their TimeStamp
        property.
      </param>
      <param name="logLevelFilter">
        The <see cref="T:System.Func`2" />, that is applied to filter the LogEntries by their LogLevel
        property.
      </param>
      <param name="logMessageFilter">
        The <see cref="T:System.Func`2" />, that is applied to filter the LogEntries by their Message
        property.
      </param>
    </member>
    <member name="M:Drelanium.SeleniumLogs.Get">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.SeleniumLogs.PrintToLogger(Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.TargetLocator">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.ITargetLocator" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.TargetLocator" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.TargetLocator.TargetLocatorImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.ITargetLocator" />
      </summary>
    </member>
    <member name="P:Drelanium.TargetLocator.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.Frame(System.Int32)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Frame(System.Int32)" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.Frame(System.String)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Frame(System.String)" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.Frame(OpenQA.Selenium.IWebElement)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Frame(OpenQA.Selenium.IWebElement)" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.ParentFrame">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.ParentFrame" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.Window(System.String)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Window(System.String)" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.DefaultContent">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.DefaultContent" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.ActiveElement">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.ActiveElement" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.Alert">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Alert" />
      </summary>
    </member>
    <member name="M:Drelanium.TargetLocator.ActiveElement(Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.ActiveElement" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.TargetLocator.Alert(Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Alert" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.TargetLocator.DefaultContent(Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.DefaultContent" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.TargetLocator.FirstWindow(Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.TargetLocator.Frame(System.Int32,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Frame(System.Int32)" />
        <para>Logs the event.</para>
      </summary>
      <param name="frameIndex">...Description to be added...</param>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
    </member>
    <member name="M:Drelanium.TargetLocator.Frame(System.String,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Frame(System.String)" />
        <para>Logs the event.</para>
      </summary>
      <param name="frameName">...Description to be added...</param>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
    </member>
    <member name="M:Drelanium.TargetLocator.Frame(OpenQA.Selenium.IWebElement,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Frame(OpenQA.Selenium.IWebElement)" />
        <para>Logs the event.</para>
      </summary>
      <param name="frameElement">...Description to be added...</param>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
    </member>
    <member name="M:Drelanium.TargetLocator.LastWindow(Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.TargetLocator.ParentFrame(Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.ParentFrame" />
        <para>Logs the event.</para>
      </summary>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.TargetLocator.Window(System.String,Serilog.Core.Logger)">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.ITargetLocator.Window(System.String)" />
        <para>Logs the event.</para>
      </summary>
      <param name="windowName">...Description to be added...</param>
      <param name="logger">
        The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages (
        <see cref="T:Serilog.Events.LogEventLevel" /> =
        <see cref="F:Serilog.Events.LogEventLevel.Information" />) during
        the method exeuction.
      </param>
    </member>
    <member name="M:Drelanium.TargetLocator.Window(System.Int32,Serilog.Core.Logger)">
      <summary>
        ...Description to be added...
        <para>Logs the event optionally.</para>
      </summary>
      <param name="indexOfWindow">...Description to be added...</param>
      <param name="logger">The used <see cref="T:Serilog.Core.Logger" /> instance to display logged messages during the method exeuction.</param>
    </member>
    <member name="T:Drelanium.Timeouts">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.ITimeouts" />
      </summary>
    </member>
    <member name="M:Drelanium.Timeouts.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.Timeouts" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Timeouts.TimeoutsImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.ITimeouts" />
      </summary>
    </member>
    <member name="P:Drelanium.Timeouts.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="P:Drelanium.Timeouts.ImplicitWait">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.ITimeouts.ImplicitWait" />
      </summary>
    </member>
    <member name="P:Drelanium.Timeouts.AsynchronousJavaScript">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.ITimeouts.AsynchronousJavaScript" />
      </summary>
    </member>
    <member name="P:Drelanium.Timeouts.PageLoad">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.ITimeouts.PageLoad" />
      </summary>
    </member>
    <member name="T:Drelanium.Window">
      <summary>
        Extended implementation of <see cref="T:OpenQA.Selenium.IWindow" />
      </summary>
    </member>
    <member name="M:Drelanium.Window.#ctor(OpenQA.Selenium.IWebDriver)">
      <summary>
        <inheritdoc cref="T:Drelanium.Window" />
      </summary>
      <param name="driver">The browser, that is represented by an <see cref="T:OpenQA.Selenium.IWebDriver" /> instance.</param>
    </member>
    <member name="P:Drelanium.Window.WindowImplementation">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWindow" />
      </summary>
    </member>
    <member name="P:Drelanium.Window.Driver">
      <summary>
        <inheritdoc cref="T:OpenQA.Selenium.IWebDriver" />
      </summary>
    </member>
    <member name="M:Drelanium.Window.Maximize">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IWindow.Maximize" />
      </summary>
    </member>
    <member name="M:Drelanium.Window.Minimize">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IWindow.Minimize" />
      </summary>
    </member>
    <member name="M:Drelanium.Window.FullScreen">
      <summary>
        <inheritdoc cref="M:OpenQA.Selenium.IWindow.FullScreen" />
      </summary>
    </member>
    <member name="P:Drelanium.Window.Position">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.IWindow.Position" />
      </summary>
    </member>
    <member name="P:Drelanium.Window.Size">
      <summary>
        <inheritdoc cref="P:OpenQA.Selenium.IWindow.Size" />
      </summary>
    </member>
    <member name="T:Drelanium.Attributes">
      <summary>
        Represents the HTMLElement's attributes
      </summary>
    </member>
    <member name="M:Drelanium.Attributes.#ctor(OpenQA.Selenium.IWebElement)">
      <summary>
        Represents the HTMLElement's attributes
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="P:Drelanium.Attributes.Element">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Accesskey">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Contenteditable">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Contextmenu">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Dir">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Draggable">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Hidden">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Lang">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Spellcheck">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Tabindex">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Title">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Class">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Value">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Name">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Type">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.TagName">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Checked">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Selected">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.SelectedIndex">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Href">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Src">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.ReadOnly">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Disabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.Style">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Attributes.ID">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Attributes.Get(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="attributeName">Name of the attribute of the element.</param>
    </member>
    <member name="M:Drelanium.Attributes.Get(Drelanium.ElementAttributeName)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Attributes.Remove(System.String)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="attributeName">Name of the attribute of the element.</param>
    </member>
    <member name="M:Drelanium.Attributes.Remove(Drelanium.ElementAttributeName)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Attributes.Set(System.String,System.Object)">
      <summary>
        ...Description to be added...
      </summary>
      <param name="attributeName">Name of the attribute of the element.</param>
      <param name="attributeValue">...Description to be added...</param>
    </member>
    <member name="M:Drelanium.Attributes.Set(Drelanium.ElementAttributeName,System.Object)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.ElementPoint">
      <summary>
        Represents the HTMLElement's Location
      </summary>
    </member>
    <member name="T:Drelanium.Location">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Location.#ctor(OpenQA.Selenium.IWebElement)">
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="P:Drelanium.Location.Element">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.Height">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.Width">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.TopLeftPoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.MiddleLeftPoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.BottomLeftPoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.TopMiddlePoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.MiddlePoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.BottomMiddlePoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.TopRightPoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.MiddleRightPoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Location.BottomRightPoint">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Location.Point(Drelanium.ElementPoint)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.Properties">
      <summary>
        Represents the HTMLElement's properties
      </summary>
    </member>
    <member name="M:Drelanium.Properties.#ctor(OpenQA.Selenium.IWebElement)">
      <summary>
        Represents the HTMLElement's properties
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="P:Drelanium.Properties.Disabled">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Properties.InnerText">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Properties.Value">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="P:Drelanium.Properties.Element">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Properties.Get(System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Properties.Get(Drelanium.ElementPropertyName)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Properties.Set(System.String,System.Object)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Properties.Set(Drelanium.ElementPropertyName,System.Object)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="T:Drelanium.Style">
      <summary>
        Represents the HTMLElement's style properties
      </summary>
    </member>
    <member name="M:Drelanium.Style.#ctor(OpenQA.Selenium.IWebElement)">
      <summary>
        Represents the HTMLElement's style properties
      </summary>
      <param name="element">
        The HTMLElement, that is represented by an <see cref="T:OpenQA.Selenium.IWebElement" />
        instance.
      </param>
    </member>
    <member name="P:Drelanium.Style.Element">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Style.Get(System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Style.Get(Drelanium.ElementStylePropertyName)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Style.GetValue(System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Style.GetValue(Drelanium.ElementStylePropertyName)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Style.Remove(System.String)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Style.Remove(Drelanium.ElementStylePropertyName)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Style.Set(System.String,System.Object)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
    <member name="M:Drelanium.Style.Set(Drelanium.ElementStylePropertyName,System.Object)">
      <summary>
        ...Description to be added...
      </summary>
    </member>
  </members>
</doc>